{"version":3,"sources":["HomePage.tsx","Nav.tsx","components/Loader/Loader.tsx","api.ts","PersonLink.tsx","PeopleTable.tsx","People.tsx","App.tsx","index.tsx"],"names":["HomePage","className","applyClassNames","isActive","classNames","Nav","role","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","setSelectedPerson","slug","sex","onClick","name","PeopleTable","people","useState","selectedPerson","findParent","useCallback","parent","find","peopleWithParents","useMemo","map","mother","motherName","father","fatherName","born","died","People","isLoading","setIsLoading","setPeople","hasError","setHasError","isEmpty","setIsEmpty","useEffect","length","catch","finally","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.64747a4a.chunk.js","sourcesContent":["export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst applyClassNames = ({ isActive } : { isActive: boolean }) => (\n  classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  )\n);\n\nexport const Nav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={applyClassNames}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={applyClassNames}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from './types/Person';\n\ninterface Props {\n  person: Person,\n  setSelectedPerson: (selectedPerson: string) => void;\n}\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  setSelectedPerson,\n}) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      onClick={() => setSelectedPerson(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useCallback, useMemo, useState } from 'react';\nimport { PersonLink } from './PersonLink';\nimport { Person } from './types';\n\ninterface Props {\n  people: Person[] | null,\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const findParent = useCallback((name: string | null) => {\n    if (!name) {\n      return null;\n    }\n\n    const parent = people?.find(person => person.name === name);\n\n    if (!parent) {\n      return null;\n    }\n\n    return parent;\n  }, [people]);\n\n  const peopleWithParents = useMemo<Person[]>(() => {\n    if (!people) {\n      return [];\n    }\n\n    return people.map(person => ({\n      ...person,\n      mother: findParent(person.motherName),\n      father: findParent(person.fatherName),\n    }));\n  }, [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents.map(person => {\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': selectedPerson === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                  setSelectedPerson={setSelectedPerson}\n                />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother ? (\n                  <PersonLink\n                    person={person.mother}\n                    setSelectedPerson={setSelectedPerson}\n                  />\n                ) : (person.motherName || '-')}\n              </td>\n              <td>\n                {person.father ? (\n                  <PersonLink\n                    person={person.father}\n                    setSelectedPerson={setSelectedPerson}\n                  />\n                ) : person.fatherName}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './components/Loader';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const People = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => {\n        if (!response.length) {\n          setIsEmpty(true);\n\n          return;\n        }\n\n        setPeople(response);\n        setHasError(false);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <PeopleTable people={people} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './HomePage';\nimport { Nav } from './Nav';\nimport { People } from './People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Nav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route path=\"people\" element={<People />}>\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}